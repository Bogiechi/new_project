version: "3.8"
services:
  redash:
    # 選用此版本的 redash image
    image: redash/redash:10.1.0.b50633
    # depends 代表依賴關係
    # 需要等 postgres、redis 先架設完成
    # 才會開始架設 redash services
    depends_on:
      - postgres
      - redis
    restart: always
    # redash 啟動 server 指令
    command: server
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.labels.redash == true]
      labels:
        - traefik.enable=true
        - traefik.frontend.passHostHeader=true
        # routers 設定，
        # 這裡根據 fastapi 所需的 router 做額外設定
        # fastapi 預設在 /docs 作為文件頁面，
        # 並根據 /openapi.json 去製作文件
        # 因此需額外設定 
        # testapi.ddns.net/docs 與 
        # testapi.ddns.net/openapi.json
        # 可被 traefik 訪問，方法如下
        # 指定 Host 與 Path
        # &&：代表 and，將 Host 與 Path 連在一起使用
        # ||：代表 or，在多個 router 時使用
        - traefik.http.routers.api-https.rule=
          Host(`chidashboard.ddns.net`) && PathPrefix(`/public/dashboards/yjlyFqmtEWUbu7hU9Q0tbNAErF0fiPglcTpMBMMV`) ||
          Host(`chidashboard.ddns.net`) && PathPrefix(`/setup`) ||
          Host(`chidashboard.ddns.net`)
        # api loading balance 的 port
        # traefik 的好處之一，會幫你處理分流
        - traefik.http.services.api-https.loadbalancer.server.port=80
        # SSL 設定
        - traefik.http.routers.api-https.tls.certresolver=myresolver
        # http 自動導向 https
        - "traefik.http.routers.api-http-catchall.rule=hostregexp(`{host:.+}`)"
        - "traefik.http.routers.api-http-catchall.entrypoints=web"
        - "traefik.http.routers.api-http-catchall.middlewares=api-redirect-to-https@docker"
        - "traefik.http.middlewares.api-redirect-to-https.redirectscheme.scheme=https"
    # 相關的環境變數，包含
    environment:
      PYTHONUNBUFFERED: 0
      # log 等級
      REDASH_LOG_LEVEL: INFO
      # redis 的連線設定
      REDASH_REDIS_URL: redis://redis:6379/0
      # postgres 的密碼
      POSTGRES_PASSWORD: postgres_password
      REDASH_COOKIE_SECRET: redash_cookie_secret
      REDASH_SECRET_KEY: redash_secret_key
      # postgres 的連線設定
      REDASH_DATABASE_URL: postgresql://postgres:postgres_password@postgres/postgres
      # 允許在 redash 上使用 python
      REDASH_ADDITIONAL_QUERY_RUNNERS: redash.query_runner.python
      # worker 數量
      # 這是做範例，設定 1，
      # 未來可根據需求自行增加
      REDASH_WEB_WORKERS: 1
      # 修正 mysql 斷線問題
      SQLALCHEMY_ENABLE_POOL_PRE_PING: 1
    networks:
        - my_network
        - traefik-public

  create_table:
    # 相關設定與 redash services 相同
    # 也用相同的 image
    image: redash/redash:10.1.0.b50633
    depends_on:
      - postgres
      - redis
    # restart: always
    # 主要差異在此
    # 初始化需要建立 table
    # 建立完成後，可在 portainer 上刪除此 services
    command: python /app/manage.py database create_tables
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: INFO
      REDASH_REDIS_URL: redis://redis:6379/0
      POSTGRES_PASSWORD: postgres_password
      REDASH_COOKIE_SECRET: redash_cookie_secret
      REDASH_SECRET_KEY: redash_secret_key
      REDASH_DATABASE_URL: postgresql://postgres:postgres_password@postgres/postgres
      REDASH_ADDITIONAL_QUERY_RUNNERS: redash.query_runner.python
      REDASH_WEB_WORKERS: 1
      # 修正 mysql 斷線問題
      SQLALCHEMY_ENABLE_POOL_PRE_PING: 1
    networks:
        - my_network
        - traefik-public

  scheduler:
    # 用於 redash 相關的 scheduler 排程
    image: redash/redash:10.1.0.b50633
    depends_on:
      - postgres
      - redis
    restart: always
    command: scheduler
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: INFO
      REDASH_REDIS_URL: redis://redis:6379/0
      POSTGRES_PASSWORD: postgres_password
      REDASH_COOKIE_SECRET: redash_cookie_secret
      REDASH_SECRET_KEY: redash_secret_key
      REDASH_DATABASE_URL: postgresql://postgres:postgres_password@postgres/postgres
      REDASH_ADDITIONAL_QUERY_RUNNERS: redash.query_runner.python
      # 這裡的 celery 就跟前面章節提到的
      # 分散式概念一樣
      QUEUES: "celery"
      WORKERS_COUNT: 1
      # 修正 mysql 斷線問題
      SQLALCHEMY_ENABLE_POOL_PRE_PING: 1
    networks:
        - my_network
        - traefik-public
  
  scheduled_worker:
    # 分散式中的 worker 
    image: redash/redash:10.1.0.b50633
    depends_on:
      - postgres
      - redis
    restart: always
    command: worker
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: INFO
      REDASH_REDIS_URL: redis://redis:6379/0
      POSTGRES_PASSWORD: postgres_password
      REDASH_COOKIE_SECRET: redash_cookie_secret
      REDASH_SECRET_KEY: redash_secret_key
      REDASH_DATABASE_URL: postgresql://postgres:postgres_password@postgres/postgres
      REDASH_ADDITIONAL_QUERY_RUNNERS: redash.query_runner.python
      # 負責處理 queue = scheduled_queries,schemas 類型的任務
      # 與本書中 7.6.3，crawler.yml 中的 -Q twse 概念一樣
      QUEUES: "scheduled_queries,schemas"
      WORKERS_COUNT: 1
      # 修正 mysql 斷線問題
      SQLALCHEMY_ENABLE_POOL_PRE_PING: 1
    networks:
        - my_network
        - traefik-public

  adhoc_worker:
    image: redash/redash:10.1.0.b50633
    depends_on:
      - postgres
      - redis
    restart: always
    command: worker
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: INFO
      REDASH_REDIS_URL: redis://redis:6379/0
      POSTGRES_PASSWORD: postgres_password
      REDASH_COOKIE_SECRET: redash_cookie_secret
      REDASH_SECRET_KEY: redash_secret_key
      REDASH_DATABASE_URL: postgresql://postgres:postgres_password@postgres/postgres
      REDASH_ADDITIONAL_QUERY_RUNNERS: redash.query_runner.python
      # 負責處理 queue = queries 類型的任務
      # 與本書中 7.6.3，crawler.yml 中的 -Q twse 概念一樣
      QUEUES: "queries"
      WORKERS_COUNT: 2
      # 修正 mysql 斷線問題
      SQLALCHEMY_ENABLE_POOL_PRE_PING: 1
    networks:
        - my_network
        - traefik-public

  redis:
    # redis 資料庫
    image: redis:5.0
    restart: always
    volumes:
      - redis-redash:/bitnami/redis/data
    networks:
        - my_network
        - traefik-public

  postgres:
    # postgres 資料庫
    image: postgres:9.6-alpine
    environment:
      PYTHONUNBUFFERED: 0
      REDASH_LOG_LEVEL: INFO
      REDASH_REDIS_URL: redis://redis:6379/0
      POSTGRES_PASSWORD: postgres_password
      REDASH_COOKIE_SECRET: redash_cookie_secret
      REDASH_SECRET_KEY: redash_secret_key
      REDASH_DATABASE_URL: postgresql://postgres:postgres_password@postgres/postgres
      REDASH_ADDITIONAL_QUERY_RUNNERS: redash.query_runner.python
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: always
    networks:
        - my_network
        - traefik-public

  nginx:
    # 網頁伺服器
    image: redash/nginx:latest
    depends_on:
      - redash
    restart: always
    networks:
        - my_network
        - traefik-public

networks:
  my_network:
    # 加入已經存在的網路
    external: true
  traefik-public:
    # 需加入 traefik 的網路
    external: true

volumes:
  postgres:

  redis-redash: